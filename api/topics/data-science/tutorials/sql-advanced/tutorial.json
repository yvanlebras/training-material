{
  "layout": "tutorial_hands_on",
  "title": "Advanced SQL",
  "level": "Introductory",
  "zenodo_link": null,
  "requirements": [
    {
      "type": "internal",
      "topic_name": "data-science",
      "tutorials": [
        "sql-basic"
      ]
    }
  ],
  "follow_up_training": [
    {
      "type": "internal",
      "topic_name": "data-science",
      "tutorials": [
        "sql-python"
      ]
    }
  ],
  "questions": [
    "How can I calculate sums, averages, and other summary values?",
    "How can I combine data from multiple tables?",
    "How should I format data in a database, and why?",
    "How can I create, modify, and delete tables and data?",
    "How can I access databases from programs written in Python?"
  ],
  "objectives": [
    "Define aggregation and give examples of its use.",
    "Write queries that compute aggregated values.",
    "Trace the execution of a query that performs aggregation.",
    "Explain how missing data is handled during aggregation.",
    "Explain the operation of a query that joins two tables.",
    "Explain how to restrict the output of a query containing a join to only include meaningful combinations of values.",
    "Write queries that join tables on equal keys.",
    "Explain what primary and foreign keys are, and why they are useful.",
    "Explain what an atomic value is.",
    "Distinguish between atomic and non-atomic values.",
    "Explain why every value in a database should be atomic.",
    "Explain what a primary key is and why every record should have one.",
    "Identify primary keys in database tables.",
    "Explain why database entries should not contain redundant information.",
    "Identify redundant information in databases.",
    "Write statements that create tables.",
    "Write statements to insert, modify, and delete records.",
    "Write short programs that execute SQL queries.",
    "Trace the execution of a program that contains an SQL query.",
    "Explain why most database applications are written in a general-purpose language rather than in SQL."
  ],
  "time_estimation": "3H",
  "key_points": [
    "Use aggregation functions to combine multiple values.",
    "Aggregation functions ignore `null` values.",
    "Aggregation happens after filtering.",
    "Use GROUP BY to combine subsets separately.",
    "If no aggregation function is specified for a field, the query may return an arbitrary value for that field.",
    "Use JOIN to combine data from two tables.",
    "Use table.field notation to refer to fields when doing joins.",
    "Every fact should be represented in a database exactly once.",
    "A join produces all combinations of records from one table with records from another.",
    "A primary key is a field (or set of fields) whose values uniquely identify the records in a table.",
    "A foreign key is a field (or set of fields) in one table whose values are a primary key in another table.",
    "We can eliminate meaningless combinations of records by matching primary keys and foreign keys between tables.",
    "The most common join condition is matching keys.",
    "Every value in a database should be atomic.",
    "Every record should have a unique primary key.",
    "A database should not contain redundant information.",
    "Units and similar metadata should be stored with the data.",
    "Use CREATE and DROP to create and delete tables.",
    "Use INSERT to add data.",
    "Use UPDATE to modify existing data.",
    "Use DELETE to remove data.",
    "It is simpler and safer to modify data when every record has a unique primary key.",
    "Do not create dangling references by deleting records that other records refer to.",
    "General-purpose languages have libraries for accessing databases.",
    "To connect to a database, a program must use a library specific to that database manager.",
    "These libraries use a connection-and-cursor model.",
    "Programs can read query results in batches or all at once.",
    "Queries should be written using parameter substitution, not string formatting."
  ],
  "contributors": [
    {
      "name": "The Carpentries",
      "joined": "2021-09",
      "id": "carpentries",
      "url": "https://training.galaxyproject.org/training-material/api/contributors/carpentries.json"
    },
    {
      "name": "Helena Rasche",
      "email": "helena.rasche@gmail.com",
      "orcid": "0000-0001-9760-8992",
      "maintainer_contact": "gitter",
      "gitter": "hexylena",
      "joined": "2017-09",
      "id": "hexylena",
      "url": "https://training.galaxyproject.org/training-material/api/contributors/hexylena.json"
    },
    {
      "name": "Avans Hogeschool",
      "joined": "2020-11",
      "funder": true,
      "funding_statement": "A number of our employees contribute directly to the Galaxy Training Network and seek to make our higher education learning materials more accessible to a wider audience through the GTN platform. [avans.nl](https://avans.nl/)\n",
      "id": "avans-atgm",
      "url": "https://training.galaxyproject.org/training-material/api/contributors/avans-atgm.json"
    }
  ],
  "subtopic": "sql",
  "notebook": {
    "language": "sql"
  },
  "abbreviations": {
    "SQL": "Structured Query Language"
  },
  "tags": [
    "SQL",
    "jupyter-notebook"
  ],
  "last_modified_at": "21-Dec-21",
  "url": "/topics/data-science/tutorials/sql-advanced/tutorial.html",
  "topic_name": "data-science",
  "tutorial_name": "sql-advanced"
}