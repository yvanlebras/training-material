var search_data = {"index":{"searchIndex":["boxidtest","colourtag","gtnnotebooks","gtn","boxify","git","images","metrics","modificationtimes","scholar","shortlinks","supported","toolshed","gtnlinter","gtnlintertest","hash","hsluv","intersectiontest","jekyll","apigenerator","abbreviate","authorpagegenerator","bibtag","boxify","citetag","colorpickertag","customlinktag","dumpsearchdatatag","durationfilter","environmentvariablesgenerator","figurify","fileexiststag","gtnfunctions","icontag","icontagvar","implcolourtag","impltopicfilter","jsbundle","jsonldfilter","plaintextslidesgenerator","rmarkdowngenerator","sitemapgenerator","synthetictopicgenerator","tags","snippetincludetag","tooltag","workflowtag","object","reviewdogemitter","schemavalidator","topicfilter","_discover()","_get_image_dimensions()","add_metadata_cell()","annotate_path()","automagic_loading()","bad_tool_links()","bib_missing_mandatory_fields()","bin_width()","box_classes()","boxify()","bundle_preloads()","bundle_preloads_prod()","cache()","cache()","cache()","cache()","calculate()","call_engine()","check_bad_cite()","check_bad_heading_order()","check_bad_link()","check_bad_link_text()","check_bad_tag()","check_bolded_heading()","check_dois()","check_looks_like_heading()","check_pmids()","check_tool_link()","check_useless_box_prefix()","citation_library()","code_limits()","collate_materials()","collect_metrics()","colour_tag()","colour_tag()","construct_byline()","convert_notebook_markdown()","convert_to_material_list()","convert_workflow_path_to_trs()","correct()","data_library_for_tutorial()","degrees_to_radians()","delete_text()","discover()","discover_bib()","distance_from_pole()","dot_product()","duration_to_human()","elixirnode2name()","emit_results()","enable_auto_fix()","enumerate_all()","enumerate_lintable()","enumerate_symlinks()","enumerate_topics()","enumerate_type()","error()","extract_workflow_tool_list()","f()","f_inv()","fedi2link()","fetch2()","fetch_tutorial_material()","fetch_tutorial_material()","file_error()","fill_cache()","filterslides()","filtertutorials()","filter_authors()","filter_by_topic()","filter_by_topic_subtopic()","filter_results()","find_duration()","find_matching_texts()","fixbashnotebook()","fixnews()","fixpythonnotebook()","fixrnotebook()","fixsqlnotebook()","fix_bib()","fix_box_titles()","fix_file()","fix_ga_wf()","fix_md()","fix_notoc()","format_admin_install()","format_box_title()","format_reviewdog_output()","from_linear()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generateconfiguration()","generatelibrary()","generateversion()","generate_box()","generate_collapsible_title()","generate_css()","generate_dublin_core()","generate_metrics()","generate_news_jsonld()","generate_org_jsonld()","generate_person_jsonld()","generate_static_title()","generate_title()","get_authors()","get_authors()","get_bounds()","get_config()","get_config()","get_contributors()","get_contributors()","get_default_link()","get_icon()","get_icon()","get_id()","get_image_dimensions()","get_posts()","get_topic()","get_version()","getlist()","group_doc_by_first_char()","gtn_mod_date()","hex_to_hpluv()","hex_to_hsluv()","hex_to_rgb()","histogram()","histogram_dates()","how_many_topic_feedbacks()","how_many_tutorial_feedbacks()","hpluv_to_hex()","hpluv_to_lch()","hpluv_to_rgb()","hsluv_to_hex()","hsluv_to_lch()","hsluv_to_rgb()","html_image_dimensions()","humanize_types()","identify_contributors()","identify_contributors()","identify_funders()","identify_funders()","incorrect_calls()","init_cache()","intersect_line_line()","iqr()","json_boxify()","jupyter_post_write()","jupyter_pre_render()","last_modified_at()","layout_to_human()","lch_to_hpluv()","lch_to_hsluv()","lch_to_luv()","lch_to_rgb()","length_of_ray_until_intersect()","link_gtn_slides_external()","link_gtn_tutorial_external()","linkify()","lint_faq_file()","lint_material()","lint_news_file()","lint_quiz_file()","lint_topic()","lintable?()","list_all_materials()","list_all_tags()","list_all_tags()","list_materials_by_tool()","list_materials_by_tool()","list_materials_structured()","list_materials_structured()","list_topics()","list_topics_by_category()","list_videos()","load_bib()","load_bundle()","load_bundle_dev()","load_bundle_production()","load_svg()","lookup_name()","luv_to_lch()","luv_to_xyz()","mapcontributor()","mapped?()","markdownify()","markdownify()","markdownify()","max_chroma_for()","max_safe_chroma_for()","message()","most_recent_contributors()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_more_accessible_boxes()","new_more_accessible_boxes_agenda()","no_target_blank()","non_existent_snippet()","notebook_filter()","obtain_time()","onlyenabled()","parseoptions()","parse_metadata()","parse_tutorial_for_zenodo_link()","parse_zenodo_id_formats()","populate_cache()","printablematerial()","process_pages()","pusher()","radians_to_degrees()","recently_modified_tutorials()","regex_replace()","regex_replace_once()","render()","render()","render()","render()","render()","render()","render()","render()","render()","render()","render()","rendermarkdowncells()","render_citation()","render_for_text()","render_jupyter_notebook()","render_rmarkdown()","replace_elements()","replace_newline_doublespace()","resolve_material()","rgb_prepare()","rgb_to_hex()","rgb_to_hpluv()","rgb_to_hsluv()","rgb_to_lch()","rgb_to_xyz()","run()","run_linter_global()","safe_title()","segment()","segment_page_by_key()","set_plain_output()","set_rdjson_output()","short_tool()","should_ignore()","slide?()","slugify_unsafe()","snippets_too_close_together()","split_sentence()","synthesize()","test_doi()","test_exact()","test_external_gtn_link()","test_external_gtn_link_slides()","test_fix_broken_link()","test_fix_notoc()","test_single_page()","test_workflow()","test_youtube()","testnew_title_()","time_cache()","timefmt()","title_classes()","to_jsonld()","to_linear()","to_person_jsonld()","to_prometheus()","top_citations()","topic_count()","topic_filter()","topic_filter()","topic_name_from_page()","translate()","tutorial?()","update()","update_data_library()","update_tutorial()","validate_document()","validate_document()","validate_non_empty_key_value()","validate_requirements()","visitandmarkdownify()","warning()","write_data_library()","xyz_to_luv()","xyz_to_rgb()","youtube_bad()","add_galaxy_instance_badges.py","ari-gen-sample-audio.sh","ari-make.sh","ari-quick.sh","ari.sh","check-broken-boxes.py","data-library-update.sh","data_libarary_download.sh","docker-install-tutorials.sh","gtn-fix.sh","install_topic_requirements.sh","install_tutorial_requirements.sh","knit-automated.sh","knit-frog.py","knit.py","knittingneedles.py","lint-diffs.py","lunr-index.js","lunr-search.js","mergeyaml.py","prepare_docker_checks.py","publish-archive","schema-contributors.yaml","schema-faq.yaml","schema-learning-pathway.yaml","schema-news.yaml","schema-quiz.yaml","schema-requirement-external.yaml","schema-requirement-internal.yaml","schema-slides.yaml","schema-topic.yaml","schema-tutorial.yaml","setup_training_content.py","slides-fix.css","supported-fetch.py","validate-has-workflow.sh","video-browser-recorder.js","video-builder.py","video-diffplayer.py","video-extract-script.py","video-term-demo-magic.sh","video-term-recorder.sh","yaml2json.py"],"longSearchIndex":["boxidtest","colourtag","gtnnotebooks","gtn","gtn::boxify","gtn::git","gtn::images","gtn::metrics","gtn::modificationtimes","gtn::scholar","gtn::shortlinks","gtn::supported","gtn::toolshed","gtnlinter","gtnlintertest","hash","hsluv","intersectiontest","jekyll","jekyll::apigenerator","jekyll::abbreviate","jekyll::authorpagegenerator","jekyll::bibtag","jekyll::boxify","jekyll::citetag","jekyll::colorpickertag","jekyll::customlinktag","jekyll::dumpsearchdatatag","jekyll::durationfilter","jekyll::environmentvariablesgenerator","jekyll::figurify","jekyll::fileexiststag","jekyll::gtnfunctions","jekyll::icontag","jekyll::icontagvar","jekyll::implcolourtag","jekyll::impltopicfilter","jekyll::jsbundle","jekyll::jsonldfilter","jekyll::plaintextslidesgenerator","jekyll::rmarkdowngenerator","jekyll::sitemapgenerator","jekyll::synthetictopicgenerator","jekyll::tags","jekyll::tags::snippetincludetag","jekyll::tooltag","jekyll::workflowtag","object","reviewdogemitter","schemavalidator","topicfilter","gtn::git::_discover()","gtn::images::_get_image_dimensions()","gtnnotebooks::add_metadata_cell()","topicfilter::annotate_path()","object#automagic_loading()","gtnlinter::bad_tool_links()","gtnlinter::bib_missing_mandatory_fields()","gtn::metrics::bin_width()","gtn::boxify::box_classes()","jekyll::boxify#boxify()","jekyll::jsbundle#bundle_preloads()","jekyll::jsbundle#bundle_preloads_prod()","gtn::git::cache()","gtn::images::cache()","jekyll::gtnfunctions::cache()","jekyll::implcolourtag#cache()","gtn::supported::calculate()","object#call_engine()","gtnlinter::check_bad_cite()","gtnlinter::check_bad_heading_order()","gtnlinter::check_bad_link()","gtnlinter::check_bad_link_text()","gtnlinter::check_bad_tag()","gtnlinter::check_bolded_heading()","gtnlinter::check_dois()","gtnlinter::check_looks_like_heading()","gtnlinter::check_pmids()","gtnlinter::check_tool_link()","gtnlinter::check_useless_box_prefix()","gtnlinter::citation_library()","gtnlinter::code_limits()","topicfilter::collate_materials()","gtn::metrics::collect_metrics()","colourtag::colour_tag()","jekyll::implcolourtag#colour_tag()","gtnnotebooks::construct_byline()","gtnnotebooks::convert_notebook_markdown()","jekyll::gtnfunctions#convert_to_material_list()","jekyll::gtnfunctions#convert_workflow_path_to_trs()","object#correct()","object#data_library_for_tutorial()","hsluv#degrees_to_radians()","reviewdogemitter::delete_text()","gtn::git::discover()","gtn::scholar::discover_bib()","hsluv#distance_from_pole()","hsluv#dot_product()","jekyll::durationfilter#duration_to_human()","jekyll::gtnfunctions#elixirnode2name()","gtnlinter::emit_results()","gtnlinter::enable_auto_fix()","gtnlinter::enumerate_all()","gtnlinter::enumerate_lintable()","gtnlinter::enumerate_symlinks()","topicfilter::enumerate_topics()","gtnlinter::enumerate_type()","reviewdogemitter::error()","topicfilter::extract_workflow_tool_list()","hsluv#f()","hsluv#f_inv()","jekyll::gtnfunctions#fedi2link()","hash#fetch2()","jekyll::impltopicfilter#fetch_tutorial_material()","topicfilter::fetch_tutorial_material()","reviewdogemitter::file_error()","topicfilter::fill_cache()","object#filterslides()","object#filtertutorials()","jekyll::gtnfunctions#filter_authors()","topicfilter::filter_by_topic()","topicfilter::filter_by_topic_subtopic()","gtnlinter::filter_results()","object#find_duration()","gtnlinter::find_matching_texts()","gtnnotebooks::fixbashnotebook()","object#fixnews()","gtnnotebooks::fixpythonnotebook()","gtnnotebooks::fixrnotebook()","gtnnotebooks::fixsqlnotebook()","gtnlinter::fix_bib()","jekyll::gtnfunctions#fix_box_titles()","gtnlinter::fix_file()","gtnlinter::fix_ga_wf()","gtnlinter::fix_md()","gtnlinter::fix_notoc()","gtn::toolshed::format_admin_install()","gtn::boxify::format_box_title()","gtnlinter::format_reviewdog_output()","hsluv#from_linear()","jekyll::apigenerator#generate()","jekyll::authorpagegenerator#generate()","jekyll::environmentvariablesgenerator#generate()","jekyll::figurify#generate()","jekyll::plaintextslidesgenerator#generate()","jekyll::rmarkdowngenerator#generate()","jekyll::sitemapgenerator#generate()","jekyll::synthetictopicgenerator#generate()","jekyll::apigenerator#generateconfiguration()","jekyll::apigenerator#generatelibrary()","jekyll::apigenerator#generateversion()","gtn::boxify::generate_box()","gtn::boxify::generate_collapsible_title()","gtnnotebooks::generate_css()","jekyll::jsonldfilter#generate_dublin_core()","gtn::metrics::generate_metrics()","jekyll::jsonldfilter#generate_news_jsonld()","jekyll::jsonldfilter#generate_org_jsonld()","jekyll::jsonldfilter#generate_person_jsonld()","gtn::boxify::generate_static_title()","gtn::boxify::generate_title()","jekyll::jsonldfilter#get_authors()","object#get_authors()","hsluv#get_bounds()","jekyll::icontag#get_config()","jekyll::tags::snippetincludetag#get_config()","jekyll::apigenerator#get_contributors()","topicfilter::get_contributors()","jekyll::gtnfunctions#get_default_link()","gtn::boxify::get_icon()","jekyll::tags::snippetincludetag#get_icon()","gtn::boxify::get_id()","gtn::images::get_image_dimensions()","topicfilter::get_posts()","jekyll::gtnfunctions#get_topic()","topicfilter::get_version()","jekyll::dumpsearchdatatag#getlist()","gtnnotebooks::group_doc_by_first_char()","jekyll::gtnfunctions#gtn_mod_date()","hsluv#hex_to_hpluv()","hsluv#hex_to_hsluv()","hsluv#hex_to_rgb()","gtn::metrics::histogram()","gtn::metrics::histogram_dates()","jekyll::gtnfunctions#how_many_topic_feedbacks()","jekyll::gtnfunctions#how_many_tutorial_feedbacks()","hsluv#hpluv_to_hex()","hsluv#hpluv_to_lch()","hsluv#hpluv_to_rgb()","hsluv#hsluv_to_hex()","hsluv#hsluv_to_lch()","hsluv#hsluv_to_rgb()","gtn::images::html_image_dimensions()","jekyll::gtnfunctions#humanize_types()","jekyll::impltopicfilter#identify_contributors()","topicfilter::identify_contributors()","jekyll::impltopicfilter#identify_funders()","topicfilter::identify_funders()","gtnlinter::incorrect_calls()","gtn::modificationtimes::init_cache()","hsluv#intersect_line_line()","gtn::metrics::iqr()","object#json_boxify()","object#jupyter_post_write()","object#jupyter_pre_render()","jekyll::gtnfunctions#last_modified_at()","jekyll::gtnfunctions#layout_to_human()","hsluv#lch_to_hpluv()","hsluv#lch_to_hsluv()","hsluv#lch_to_luv()","hsluv#lch_to_rgb()","hsluv#length_of_ray_until_intersect()","gtnlinter::link_gtn_slides_external()","gtnlinter::link_gtn_tutorial_external()","object#linkify()","schemavalidator::lint_faq_file()","schemavalidator::lint_material()","schemavalidator::lint_news_file()","schemavalidator::lint_quiz_file()","schemavalidator::lint_topic()","schemavalidator::lintable?()","topicfilter::list_all_materials()","jekyll::impltopicfilter#list_all_tags()","topicfilter::list_all_tags()","jekyll::impltopicfilter#list_materials_by_tool()","topicfilter::list_materials_by_tool()","jekyll::impltopicfilter#list_materials_structured()","topicfilter::list_materials_structured()","topicfilter::list_topics()","jekyll::impltopicfilter#list_topics_by_category()","topicfilter::list_videos()","gtn::scholar::load_bib()","jekyll::jsbundle#load_bundle()","jekyll::jsbundle#load_bundle_dev()","jekyll::jsbundle#load_bundle_production()","jekyll::gtnfunctions#load_svg()","object#lookup_name()","hsluv#luv_to_lch()","hsluv#luv_to_xyz()","jekyll::apigenerator#mapcontributor()","gtn::shortlinks::mapped?()","gtnnotebooks::markdownify()","jekyll::apigenerator#markdownify()","jekyll::tags::snippetincludetag#markdownify()","hsluv#max_chroma_for()","hsluv#max_safe_chroma_for()","reviewdogemitter::message()","jekyll::impltopicfilter#most_recent_contributors()","jekyll::bibtag::new()","jekyll::citetag::new()","jekyll::customlinktag::new()","jekyll::dumpsearchdatatag::new()","jekyll::figurify::new()","jekyll::icontag::new()","jekyll::icontagvar::new()","jekyll::tooltag::new()","jekyll::workflowtag::new()","gtnlinter::new_more_accessible_boxes()","gtnlinter::new_more_accessible_boxes_agenda()","gtnlinter::no_target_blank()","gtnlinter::non_existent_snippet()","gtnnotebooks::notebook_filter()","gtn::modificationtimes::obtain_time()","object#onlyenabled()","object#parseoptions()","object#parse_metadata()","object#parse_tutorial_for_zenodo_link()","object#parse_zenodo_id_formats()","gtn::scholar::populate_cache()","object#printablematerial()","topicfilter::process_pages()","jekyll::authorpagegenerator#pusher()","hsluv#radians_to_degrees()","jekyll::impltopicfilter#recently_modified_tutorials()","jekyll::gtnfunctions#regex_replace()","jekyll::gtnfunctions#regex_replace_once()","jekyll::bibtag#render()","jekyll::citetag#render()","jekyll::colorpickertag#render()","jekyll::customlinktag#render()","jekyll::dumpsearchdatatag#render()","jekyll::fileexiststag#render()","jekyll::icontag#render()","jekyll::icontagvar#render()","jekyll::tags::snippetincludetag#render()","jekyll::tooltag#render()","jekyll::workflowtag#render()","gtnnotebooks::rendermarkdowncells()","gtn::scholar::render_citation()","jekyll::icontag#render_for_text()","gtnnotebooks::render_jupyter_notebook()","gtnnotebooks::render_rmarkdown()","gtn::boxify::replace_elements()","jekyll::gtnfunctions#replace_newline_doublespace()","topicfilter::resolve_material()","hsluv#rgb_prepare()","hsluv#rgb_to_hex()","hsluv#rgb_to_hpluv()","hsluv#rgb_to_hsluv()","hsluv#rgb_to_lch()","hsluv#rgb_to_xyz()","schemavalidator::run()","gtnlinter::run_linter_global()","gtn::boxify::safe_title()","gtn::metrics::segment()","gtn::metrics::segment_page_by_key()","gtnlinter::set_plain_output()","gtnlinter::set_rdjson_output()","topicfilter::short_tool()","gtnlinter::should_ignore()","schemavalidator::slide?()","jekyll::gtnfunctions#slugify_unsafe()","gtnlinter::snippets_too_close_together()","object#split_sentence()","object#synthesize()","gtnlintertest#test_doi()","intersectiontest#test_exact()","gtnlintertest#test_external_gtn_link()","gtnlintertest#test_external_gtn_link_slides()","gtnlintertest#test_fix_broken_link()","gtnlintertest#test_fix_notoc()","boxidtest#test_single_page()","object#test_workflow()","gtnlintertest#test_youtube()","gtnlintertest#testnew_title_()","gtn::modificationtimes::time_cache()","object#timefmt()","gtn::boxify::title_classes()","jekyll::jsonldfilter#to_jsonld()","hsluv#to_linear()","jekyll::jsonldfilter#to_person_jsonld()","hash#to_prometheus()","jekyll::gtnfunctions#top_citations()","jekyll::impltopicfilter#topic_count()","jekyll::impltopicfilter#topic_filter()","topicfilter::topic_filter()","jekyll::gtnfunctions#topic_name_from_page()","object#translate()","schemavalidator::tutorial?()","gtn::shortlinks::update()","object#update_data_library()","object#update_tutorial()","object#validate_document()","schemavalidator::validate_document()","schemavalidator::validate_non_empty_key_value()","schemavalidator::validate_requirements()","jekyll::apigenerator#visitandmarkdownify()","reviewdogemitter::warning()","object#write_data_library()","hsluv#xyz_to_luv()","hsluv#xyz_to_rgb()","gtnlinter::youtube_bad()","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["BoxIdTest","","BoxIdTest.html","","<p>Test the box ID algorithm\n"],["ColourTag","","ColourTag.html","","<p>Our automatic colour tag generator It makes tags colourful in a reproducible way\n"],["GTNNotebooks","","GTNNotebooks.html","","<p>Generate Notebooks from Markdown\n"],["Gtn","","Gtn.html","",""],["Gtn::Boxify","","Gtn/Boxify.html","","<p>Generate boxes\n"],["Gtn::Git","","Gtn/Git.html","","<p>Parse the git repo to get some facts\n"],["Gtn::Images","","Gtn/Images.html","","<p>Module to handle pre-calculating image dimensions We can then use those dimensions in the HTML to avoid …\n"],["Gtn::Metrics","","Gtn/Metrics.html","","<p>Module for generating metrics for Prometheus\n"],["Gtn::ModificationTimes","","Gtn/ModificationTimes.html","","<p>Module for obtaining modification times of files. It walks the git history to record the last time a …\n"],["Gtn::Scholar","","Gtn/Scholar.html","","<p>GTN implementation of Jekyll::Scholar except faster.\n"],["Gtn::Shortlinks","","Gtn/Shortlinks.html","","<p>This module is responsible for generating shortlinks for tutorials and FAQs\n"],["Gtn::Supported","","Gtn/Supported.html","","<p>Handle tool support queries\n"],["Gtn::Toolshed","","Gtn/Toolshed.html","","<p>Handle toolshed yaml formatting for ephemeris\n"],["GtnLinter","","GtnLinter.html","","<p>Linting functions for the GTN\n"],["GtnLinterTest","","GtnLinterTest.html","","<p>Test case for the GTN linter\n"],["Hash","","Hash.html","","<p>Monkey patch Hash to make it Prometheus compatible\n<p>Monkey patching hash\n"],["Hsluv","","Hsluv.html","","<p>Converts between RGB, HSLUV\n"],["IntersectionTest","","IntersectionTest.html","","<p>Testing for the class\n"],["Jekyll","","Jekyll.html","",""],["Jekyll::APIGenerator","","Jekyll/APIGenerator.html","","<p>This class generates the GTN&#39;s “api” by writing out a folder full of JSON files.\n"],["Jekyll::Abbreviate","","Jekyll/Abbreviate.html","","<p>This class modifies the page contents to replace {abbr} with the associated abbreviation in a proper …\n"],["Jekyll::AuthorPageGenerator","","Jekyll/AuthorPageGenerator.html","","<p>This class generates the GTN&#39;s author pags\n"],["Jekyll::BibTag","","Jekyll/BibTag.html","","<p>{% bibliography %} which generates the bibliography\n"],["Jekyll::Boxify","","Jekyll/Boxify.html","","<p>The GTN Box generation process\n"],["Jekyll::CiteTag","","Jekyll/CiteTag.html","","<p>{% cite X %} which generates the link to the bib + text\n"],["Jekyll::ColorPickerTag","","Jekyll/ColorPickerTag.html","","<p>Convert a color into a cute little box\n"],["Jekyll::CustomLinkTag","","Jekyll/CustomLinkTag.html","","<p>Replaces the built in link tag temporarily\n"],["Jekyll::DumpSearchDataTag","","Jekyll/DumpSearchDataTag.html","","<p>Export search data as JSON\n"],["Jekyll::DurationFilter","","Jekyll/DurationFilter.html","","<p>This module contains a filter for converting a duration string into a human readable string.\n"],["Jekyll::EnvironmentVariablesGenerator","","Jekyll/EnvironmentVariablesGenerator.html","","<p>This module contains a generator for adding environment variables to the `site` object in Liquid templates …\n"],["Jekyll::Figurify","","Jekyll/Figurify.html","","<p>Our modifications to the markdown renderer to process images with figure captions\n"],["Jekyll::FileExistsTag","","Jekyll/FileExistsTag.html","","<p>This class adds a tag that checks if a file exists.\n"],["Jekyll::GtnFunctions","","Jekyll/GtnFunctions.html","","<p>The main GTN function library\n"],["Jekyll::IconTag","","Jekyll/IconTag.html","","<p>Our {% icon X %} tag\n"],["Jekyll::IconTagVar","","Jekyll/IconTagVar.html","","<p>The variable version that can accept a variable name instead of a string\n"],["Jekyll::ImplColourTag","","Jekyll/ImplColourTag.html","","<p>The jekyll implementation of the colour tag\n"],["Jekyll::ImplTopicFilter","","Jekyll/ImplTopicFilter.html","","<p>The “implementation” of the topic filter as liquid accessible filters\n"],["Jekyll::JsBundle","","Jekyll/JsBundle.html","","<p>The main GTN function library\n"],["Jekyll::JsonldFilter","","Jekyll/JsonldFilter.html","","<p>Generate JSON-LD metadata for the GTN.\n"],["Jekyll::PlaintextSlidesGenerator","","Jekyll/PlaintextSlidesGenerator.html","","<p>Convert our slides to plaintext It&#39;s not a great convesion, the CSS classes are retained which are …\n"],["Jekyll::RmarkdownGenerator","","Jekyll/RmarkdownGenerator.html","","<p>Generate RMarkdown documents from GTN markdown\n"],["Jekyll::SitemapGenerator","","Jekyll/SitemapGenerator.html","","<p>Generate a sitemap like Jekyll::Sitemap\n"],["Jekyll::SyntheticTopicGenerator","","Jekyll/SyntheticTopicGenerator.html","","<p>Generates synthetic topics from tutorials with specific tags\n"],["Jekyll::Tags","","Jekyll/Tags.html","",""],["Jekyll::Tags::SnippetIncludeTag","","Jekyll/Tags/SnippetIncludeTag.html","","<p>A custom tag {% snippet %} which behaves almost identically to {% include %} Except that it will render …\n"],["Jekyll::ToolTag","","Jekyll/ToolTag.html","","<p>The tool tag which allows us to do fancy tool links\n"],["Jekyll::WorkflowTag","","Jekyll/WorkflowTag.html","","<p>Same for the workflow tags\n"],["Object","","Object.html","",""],["ReviewDogEmitter","","ReviewDogEmitter.html","","<p>A custom module to properly format reviewdog json output\n"],["SchemaValidator","","SchemaValidator.html","","<p>Validates the frontmatter of all files\n"],["TopicFilter","","TopicFilter.html","","<p>The main GTN module to parse tutorials and topics into useful lists of things that can bes shown on topic …\n"],["_discover","Gtn::Git","Gtn/Git.html#method-c-_discover","()",""],["_get_image_dimensions","Gtn::Images","Gtn/Images.html#method-c-_get_image_dimensions","(path)",""],["add_metadata_cell","GTNNotebooks","GTNNotebooks.html#method-c-add_metadata_cell","(notebook, metadata)",""],["annotate_path","TopicFilter","TopicFilter.html#method-c-annotate_path","(path)","<p>Annotation of a path with topic and tutorial information Params:\n<p><code>path</code> &mdash; The path to annotate\n\n<p>Returns:\n"],["automagic_loading","Object","Object.html#method-i-automagic_loading","(f)",""],["bad_tool_links","GtnLinter","GtnLinter.html#method-c-bad_tool_links","(contents)",""],["bib_missing_mandatory_fields","GtnLinter","GtnLinter.html#method-c-bib_missing_mandatory_fields","(bib)",""],["bin_width","Gtn::Metrics","Gtn/Metrics.html#method-c-bin_width","(values)",""],["box_classes","Gtn::Boxify","Gtn/Boxify.html#method-c-box_classes","()",""],["boxify","Jekyll::Boxify","Jekyll/Boxify.html#method-i-boxify","(page, _site)","<p>This function adds boxes to the page content. Params:\n<p><code>page</code> &mdash; The page to add boxes to\n<p><code>site</code> &mdash; The <code>Jekyll::Site</code> …\n"],["bundle_preloads","Jekyll::JsBundle","Jekyll/JsBundle.html#method-i-bundle_preloads","(_test)","<p>Return the preloads for the bundles, when in production\n<p><code>test</code> &mdash; ignore this\n\n<p>Returns the HTML to load the bundle …\n"],["bundle_preloads_prod","Jekyll::JsBundle","Jekyll/JsBundle.html#method-i-bundle_preloads_prod","()","<p>(Internal) Return the production preloads for the bundles\n"],["cache","Gtn::Git","Gtn/Git.html#method-c-cache","()",""],["cache","Gtn::Images","Gtn/Images.html#method-c-cache","()",""],["cache","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-c-cache","()",""],["cache","Jekyll::ImplColourTag","Jekyll/ImplColourTag.html#method-i-cache","()",""],["calculate","Gtn::Supported","Gtn/Supported.html#method-c-calculate","(data, tool_list)","<p>Identify the servers that support a given tool list\n<p>Params:\n<p><code>data</code> &mdash; The data from metadata/public-server-tools.json …\n"],["call_engine","Object","Object.html#method-i-call_engine","(engine, line, mp3, voice, lang, neural)",""],["check_bad_cite","GtnLinter","GtnLinter.html#method-c-check_bad_cite","(contents)",""],["check_bad_heading_order","GtnLinter","GtnLinter.html#method-c-check_bad_heading_order","(contents)",""],["check_bad_link","GtnLinter","GtnLinter.html#method-c-check_bad_link","(contents)",""],["check_bad_link_text","GtnLinter","GtnLinter.html#method-c-check_bad_link_text","(contents)",""],["check_bad_tag","GtnLinter","GtnLinter.html#method-c-check_bad_tag","(contents)",""],["check_bolded_heading","GtnLinter","GtnLinter.html#method-c-check_bolded_heading","(contents)",""],["check_dois","GtnLinter","GtnLinter.html#method-c-check_dois","(contents)",""],["check_looks_like_heading","GtnLinter","GtnLinter.html#method-c-check_looks_like_heading","(contents)",""],["check_pmids","GtnLinter","GtnLinter.html#method-c-check_pmids","(contents)",""],["check_tool_link","GtnLinter","GtnLinter.html#method-c-check_tool_link","(contents)",""],["check_useless_box_prefix","GtnLinter","GtnLinter.html#method-c-check_useless_box_prefix","(contents)",""],["citation_library","GtnLinter","GtnLinter.html#method-c-citation_library","()",""],["code_limits","GtnLinter","GtnLinter.html#method-c-code_limits","(codes)",""],["collate_materials","TopicFilter","TopicFilter.html#method-c-collate_materials","(site, pages)","<p>Collate the materials into a large hash Params:\n<p><code>site</code> &mdash; The <code>Jekyll::Site</code> object\n<p><code>pages</code> &mdash; The list of pages to …\n"],["collect_metrics","Gtn::Metrics","Gtn/Metrics.html#method-c-collect_metrics","(site)",""],["colour_tag","ColourTag","ColourTag.html#method-c-colour_tag","(contents)","<p>This function generates the CSS for a colour tag Params\n<p><code>contents</code> &mdash; The contents of the tag\n\n<p>Returns\n"],["colour_tag","Jekyll::ImplColourTag","Jekyll/ImplColourTag.html#method-i-colour_tag","(contents)",""],["construct_byline","GTNNotebooks","GTNNotebooks.html#method-c-construct_byline","(metadata)",""],["convert_notebook_markdown","GTNNotebooks","GTNNotebooks.html#method-c-convert_notebook_markdown","(content, accepted_languages)",""],["convert_to_material_list","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-convert_to_material_list","(site, materials)",""],["convert_workflow_path_to_trs","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-convert_workflow_path_to_trs","(str)","<p>Convert a workflow path to a TRS path Params:\n<p><code>str</code> &mdash; The workflow path\n\n<p>Returns:\n"],["correct","Object","Object.html#method-i-correct","(uncorrected_line)",""],["data_library_for_tutorial","Object","Object.html#method-i-data_library_for_tutorial","(path)",""],["degrees_to_radians","Hsluv","Hsluv.html#method-i-degrees_to_radians","(degrees)",""],["delete_text","ReviewDogEmitter","ReviewDogEmitter.html#method-c-delete_text","(path: '', idx: 0, text: '', message: 'No message', code: 'GTN000', full_line: '')",""],["discover","Gtn::Git","Gtn/Git.html#method-c-discover","()","<p>Discover git-related facts and ensure they&#39;re cached Params:\n<p><code>site</code> &mdash; The <code>Jekyll::Site</code> object\n\n<p>Returns: …\n"],["discover_bib","Gtn::Scholar","Gtn/Scholar.html#method-c-discover_bib","()",""],["distance_from_pole","Hsluv","Hsluv.html#method-i-distance_from_pole","(point)",""],["dot_product","Hsluv","Hsluv.html#method-i-dot_product","(a, b)",""],["duration_to_human","Jekyll::DurationFilter","Jekyll/DurationFilter.html#method-i-duration_to_human","(duration)","<p>This function converts a duration string into a human readable string. Params:\n<p><code>duration</code> &mdash; The duration string …\n\n"],["elixirnode2name","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-elixirnode2name","(name)","<p>Returns the name of an elixir node, given its country ID Params:\n<p><code>name</code> &mdash; The country ID of the node (ISO …\n\n"],["emit_results","GtnLinter","GtnLinter.html#method-c-emit_results","(results)",""],["enable_auto_fix","GtnLinter","GtnLinter.html#method-c-enable_auto_fix","()",""],["enumerate_all","GtnLinter","GtnLinter.html#method-c-enumerate_all","()",""],["enumerate_lintable","GtnLinter","GtnLinter.html#method-c-enumerate_lintable","()",""],["enumerate_symlinks","GtnLinter","GtnLinter.html#method-c-enumerate_symlinks","()",""],["enumerate_topics","TopicFilter","TopicFilter.html#method-c-enumerate_topics","(site)","<p>This function returns a list of all the topics that are available. Params:\n<p><code>site</code> &mdash; The <code>Jekyll::Site</code> object …\n\n"],["enumerate_type","GtnLinter","GtnLinter.html#method-c-enumerate_type","(filter, root_dir: 'topics')",""],["error","ReviewDogEmitter","ReviewDogEmitter.html#method-c-error","(path: '', idx: 0, match_start: 0, match_end: 1, replacement: nil, message: 'No message', code: 'GTN000', full_line: '')",""],["extract_workflow_tool_list","TopicFilter","TopicFilter.html#method-c-extract_workflow_tool_list","(data)","<p>Extract the list of tools used in a workflow Params:\n<p><code>data</code> &mdash; The workflow data\n\n<p>Returns:\n"],["f","Hsluv","Hsluv.html#method-i-f","(t)",""],["f_inv","Hsluv","Hsluv.html#method-i-f_inv","(t)",""],["fedi2link","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-fedi2link","(fedi_address)","<p>Convert a fedi address to a link Params:\n<p><code>fedi_address</code> &mdash; The fedi address to convert\n\n<p>Returns:\n"],["fetch2","Hash","Hash.html#method-i-fetch2","(key, default)",""],["fetch_tutorial_material","Jekyll::ImplTopicFilter","Jekyll/ImplTopicFilter.html#method-i-fetch_tutorial_material","(site, topic_name, page_name)","<p>Fetch a tutorial material&#39;s metadata Parameters:\n<p><code>site</code> &mdash; The <code>Jekyll::Site</code> object, used to get the list …\n"],["fetch_tutorial_material","TopicFilter","TopicFilter.html#method-c-fetch_tutorial_material","(site, topic_name, tutorial_name)","<p>Fetch a specific tutorial material by topic and tutorial name Params:\n<p><code>site</code> &mdash; The <code>Jekyll::Site</code> object\n<p><code>topic_name</code> … &mdash; "],["file_error","ReviewDogEmitter","ReviewDogEmitter.html#method-c-file_error","(path: '', message: 'None', code: 'GTN:000')",""],["fill_cache","TopicFilter","TopicFilter.html#method-c-fill_cache","(site)","<p>Fill the cache with all the topics Params:\n<p><code>site</code> &mdash; The <code>Jekyll::Site</code> object\n\n<p>Returns: <code>nil</code>\n"],["filterSlides","Object","Object.html#method-i-filterSlides","(x)",""],["filterTutorials","Object","Object.html#method-i-filterTutorials","(x)","<p>new   news new   slidevideos new   contributors   Done new   tutorials      Done new   slides        …\n"],["filter_authors","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-filter_authors","(contributors, contributions)","<p>Basically a dupe of &#39;get_authors&#39; Params:\n<p><code>contributors</code> &mdash; The contributors to the material\n<p><code>contributions</code> … &mdash; "],["filter_by_topic","TopicFilter","TopicFilter.html#method-c-filter_by_topic","(site, topic_name)",""],["filter_by_topic_subtopic","TopicFilter","TopicFilter.html#method-c-filter_by_topic_subtopic","(site, topic_name, subtopic_id)","<p>Filter a list of materials by topic and subtopic.\n"],["filter_results","GtnLinter","GtnLinter.html#method-c-filter_results","(results, ignores)",""],["find_duration","Object","Object.html#method-i-find_duration","(mp3)",""],["find_matching_texts","GtnLinter","GtnLinter.html#method-c-find_matching_texts","(contents, query)",""],["fixBashNotebook","GTNNotebooks","GTNNotebooks.html#method-c-fixBashNotebook","(notebook)",""],["fixNews","Object","Object.html#method-i-fixNews","(n)",""],["fixPythonNotebook","GTNNotebooks","GTNNotebooks.html#method-c-fixPythonNotebook","(notebook)",""],["fixRNotebook","GTNNotebooks","GTNNotebooks.html#method-c-fixRNotebook","(notebook)",""],["fixSqlNotebook","GTNNotebooks","GTNNotebooks.html#method-c-fixSqlNotebook","(notebook)",""],["fix_bib","GtnLinter","GtnLinter.html#method-c-fix_bib","(contents, bib)",""],["fix_box_titles","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-fix_box_titles","(content, lang, key)","<p>Fix the titles of boxes in a page Params:\n<p><code>content</code> &mdash; The content to fix\n<p><code>lang</code> &mdash; The language of the content\n"],["fix_file","GtnLinter","GtnLinter.html#method-c-fix_file","(path)",""],["fix_ga_wf","GtnLinter","GtnLinter.html#method-c-fix_ga_wf","(contents)",""],["fix_md","GtnLinter","GtnLinter.html#method-c-fix_md","(contents)",""],["fix_notoc","GtnLinter","GtnLinter.html#method-c-fix_notoc","(contents)",""],["format_admin_install","Gtn::Toolshed","Gtn/Toolshed.html#method-c-format_admin_install","(data, tool_list, topic)","<p>Prepare a tool list for installation\n<p>Params:\n<p><code>data</code> &mdash; The data from metadata/toolshed-revisions.json\n"],["format_box_title","Gtn::Boxify","Gtn/Boxify.html#method-c-format_box_title","(title, box_type, lang = 'en', noprefix: false)",""],["format_reviewdog_output","GtnLinter","GtnLinter.html#method-c-format_reviewdog_output","(message)",""],["from_linear","Hsluv","Hsluv.html#method-i-from_linear","(c)",""],["generate","Jekyll::APIGenerator","Jekyll/APIGenerator.html#method-i-generate","(site)","<p>Runs the generation process Params:\n<p><code>site</code> &mdash; <code>Jekyll::Site</code> object\n\n"],["generate","Jekyll::AuthorPageGenerator","Jekyll/AuthorPageGenerator.html#method-i-generate","(site)","<p>This generates the author pages Params\n<p><code>site</code> &mdash; The site object\n\n"],["generate","Jekyll::EnvironmentVariablesGenerator","Jekyll/EnvironmentVariablesGenerator.html#method-i-generate","(site)","<p>Environment variables are added to the `site` object in Liquid templates. Here we add the following: …\n"],["generate","Jekyll::Figurify","Jekyll/Figurify.html#method-i-generate","(site)",""],["generate","Jekyll::PlaintextSlidesGenerator","Jekyll/PlaintextSlidesGenerator.html#method-i-generate","(site)","<p>Generate a plaintext version of the slides Params:\n<p><code>site</code> &mdash; The <code>Jekyll::Site</code> object\n\n"],["generate","Jekyll::RmarkdownGenerator","Jekyll/RmarkdownGenerator.html#method-i-generate","(site)",""],["generate","Jekyll::SitemapGenerator","Jekyll/SitemapGenerator.html#method-i-generate","(site)","<p>Generate a sitemap.xml file We reimplement the default Jekyll sitemap generator, because we want to leverage …\n"],["generate","Jekyll::SyntheticTopicGenerator","Jekyll/SyntheticTopicGenerator.html#method-i-generate","(site)",""],["generateConfiguration","Jekyll::APIGenerator","Jekyll/APIGenerator.html#method-i-generateConfiguration","(site)","<p>Generates /api/configuration.json Params:\n<p><code>site</code> &mdash; <code>Jekyll::Site</code> object\n\n<p>Returns: nil\n"],["generateLibrary","Jekyll::APIGenerator","Jekyll/APIGenerator.html#method-i-generateLibrary","(site)","<p>Generates /api/data-library.yaml Params:\n<p><code>site</code> &mdash; <code>Jekyll::Site</code> object\n\n<p>Returns: nil\n"],["generateVersion","Jekyll::APIGenerator","Jekyll/APIGenerator.html#method-i-generateVersion","(site)","<p>Generates /api/version.json Params:\n<p><code>site</code> &mdash; <code>Jekyll::Site</code> object\n\n<p>Returns: nil\n"],["generate_box","Gtn::Boxify","Gtn/Boxify.html#method-c-generate_box","(box_type, title, lang = 'en', key)",""],["generate_collapsible_title","Gtn::Boxify","Gtn/Boxify.html#method-c-generate_collapsible_title","(box_type, title, lang = 'en', key, contents: false, noprefix: false)",""],["generate_css","GTNNotebooks","GTNNotebooks.html#method-c-generate_css","()",""],["generate_dublin_core","Jekyll::JsonldFilter","Jekyll/JsonldFilter.html#method-i-generate_dublin_core","(material, site)","<p>Generate the Dublin Core metadata for a material. Parmaeters:\n<p><code>material</code> &mdash; The material to generate the metadata …\n"],["generate_metrics","Gtn::Metrics","Gtn/Metrics.html#method-c-generate_metrics","(site)",""],["generate_news_jsonld","Jekyll::JsonldFilter","Jekyll/JsonldFilter.html#method-i-generate_news_jsonld","(page, site)","<p>Generate the JSON-LD metadata for a news article (blog) Parameters:\n<p><code>page</code> &mdash; The page object.\n<p><code>site</code> &mdash; The <code>Jekyll::Site</code> …\n"],["generate_org_jsonld","Jekyll::JsonldFilter","Jekyll/JsonldFilter.html#method-i-generate_org_jsonld","(id, contributor, _site)",""],["generate_person_jsonld","Jekyll::JsonldFilter","Jekyll/JsonldFilter.html#method-i-generate_person_jsonld","(id, contributor, site)","<p>Generate the JSON-LD metadata for a person Parameters:\n<p><code>id</code> &mdash; The id of the person.\n<p><code>contributor</code> &mdash; The contributor …\n"],["generate_static_title","Gtn::Boxify","Gtn/Boxify.html#method-c-generate_static_title","(box_type, title, lang = 'en', key, noprefix: false)",""],["generate_title","Gtn::Boxify","Gtn/Boxify.html#method-c-generate_title","(box_type, title, lang = 'en', key, contents: false, noprefix: false)",""],["get_authors","Jekyll::JsonldFilter","Jekyll/JsonldFilter.html#method-i-get_authors","(material)","<p>Get the authors of a material. Time number 4 i&#39;ve seen this TODO(hexylena): make this a function …\n"],["get_authors","Object","Object.html#method-i-get_authors","(material)","<p>This function returns the authors of a material, if it has any. (via contributors or contribution) Params: …\n"],["get_bounds","Hsluv","Hsluv.html#method-i-get_bounds","(l)",""],["get_config","Jekyll::IconTag","Jekyll/IconTag.html#method-i-get_config","(context)",""],["get_config","Jekyll::Tags::SnippetIncludeTag","Jekyll/Tags/SnippetIncludeTag.html#method-i-get_config","(context)",""],["get_contributors","Jekyll::APIGenerator","Jekyll/APIGenerator.html#method-i-get_contributors","(data)","<p>Returns contributors, regardless of whether they are &#39;contributor&#39; or &#39;contributions&#39; …\n"],["get_contributors","TopicFilter","TopicFilter.html#method-c-get_contributors","(material)","<p>Get the contributors for a material. This is the third time I&#39;ve seen this function. I should probably …\n"],["get_default_link","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-get_default_link","(material)","<p>Gets the &#39;default&#39; link for a material, hands on if it exists, otherwise slides. Params:\n<p><code>material</code> … &mdash; "],["get_icon","Gtn::Boxify","Gtn/Boxify.html#method-c-get_icon","(icon_cls, emoji: false, a11y: false)",""],["get_icon","Jekyll::Tags::SnippetIncludeTag","Jekyll/Tags/SnippetIncludeTag.html#method-i-get_icon","(icon)",""],["get_id","Gtn::Boxify","Gtn/Boxify.html#method-c-get_id","(box_type, title, path)",""],["get_image_dimensions","Gtn::Images","Gtn/Images.html#method-c-get_image_dimensions","(tuto_dir, url)",""],["get_posts","TopicFilter","TopicFilter.html#method-c-get_posts","(site)","<p>Get the list of posts from the site Params:\n<p><code>site</code> &mdash; The <code>Jekyll::Site</code> object\n\n<p>Returns:\n"],["get_topic","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-get_topic","(page)","<p>Get the topic of a page&#39;s path Params:\n<p><code>page</code> &mdash; The page to get the topic of, it will inspect page\n\n<p>Returns: …\n"],["get_version","TopicFilter","TopicFilter.html#method-c-get_version","(tool)","<p>Get the version of a tool. Parameters:\n<p><code>tool</code> &mdash; A tool string\n\n<p>Returns:\n"],["getlist","Jekyll::DumpSearchDataTag","Jekyll/DumpSearchDataTag.html#method-i-getlist","(tutorial, attr)",""],["group_doc_by_first_char","GTNNotebooks","GTNNotebooks.html#method-c-group_doc_by_first_char","(data)",""],["gtn_mod_date","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-gtn_mod_date","(path)","<p>Returns the last modified date of a page Params:\n<p><code>page</code> &mdash; The page to get the last modified date of\n\n<p>Returns: …\n"],["hex_to_hpluv","Hsluv","Hsluv.html#method-i-hex_to_hpluv","(hex)",""],["hex_to_hsluv","Hsluv","Hsluv.html#method-i-hex_to_hsluv","(hex)",""],["hex_to_rgb","Hsluv","Hsluv.html#method-i-hex_to_rgb","(hex)",""],["histogram","Gtn::Metrics","Gtn/Metrics.html#method-c-histogram","(values)",""],["histogram_dates","Gtn::Metrics","Gtn/Metrics.html#method-c-histogram_dates","(values)",""],["how_many_topic_feedbacks","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-how_many_topic_feedbacks","(feedback, name)","<p>How many times has a topic been mentioned in feedback? Params:\n<p><code>feedback</code> &mdash; The feedback to search through …\n"],["how_many_tutorial_feedbacks","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-how_many_tutorial_feedbacks","(feedback, name)","<p>How many times has a tutorial been mentioned in feedback? Params:\n<p><code>feedback</code> &mdash; The feedback to search through …\n"],["hpluv_to_hex","Hsluv","Hsluv.html#method-i-hpluv_to_hex","(h, s, l)",""],["hpluv_to_lch","Hsluv","Hsluv.html#method-i-hpluv_to_lch","(arr)",""],["hpluv_to_rgb","Hsluv","Hsluv.html#method-i-hpluv_to_rgb","(h, s, l)",""],["hsluv_to_hex","Hsluv","Hsluv.html#method-i-hsluv_to_hex","(h, s, l)",""],["hsluv_to_lch","Hsluv","Hsluv.html#method-i-hsluv_to_lch","(arr)",""],["hsluv_to_rgb","Hsluv","Hsluv.html#method-i-hsluv_to_rgb","(h, s, l)",""],["html_image_dimensions","Gtn::Images","Gtn/Images.html#method-c-html_image_dimensions","(tuto_dir, url)",""],["humanize_types","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-humanize_types","(type)","<p>Return human text for ruby types Params:\n<p><code>type</code> &mdash; The type to humanize\n\n<p>Returns:\n"],["identify_contributors","Jekyll::ImplTopicFilter","Jekyll/ImplTopicFilter.html#method-i-identify_contributors","(materials, site)",""],["identify_contributors","TopicFilter","TopicFilter.html#method-c-identify_contributors","(materials, site)","<p>Get a list of contributors for a list of materials Parameters:\n<p><code>materials</code> &mdash; An array of materials\n\n<p>Returns: …\n"],["identify_funders","Jekyll::ImplTopicFilter","Jekyll/ImplTopicFilter.html#method-i-identify_funders","(materials, site)",""],["identify_funders","TopicFilter","TopicFilter.html#method-c-identify_funders","(materials, site)","<p>Get a list of funders for a list of materials Parameters:\n<p><code>materials</code> &mdash; An array of materials\n\n<p>Returns:\n"],["incorrect_calls","GtnLinter","GtnLinter.html#method-c-incorrect_calls","(contents)",""],["init_cache","Gtn::ModificationTimes","Gtn/ModificationTimes.html#method-c-init_cache","()",""],["intersect_line_line","Hsluv","Hsluv.html#method-i-intersect_line_line","(line1, line2)",""],["iqr","Gtn::Metrics","Gtn/Metrics.html#method-c-iqr","(array)",""],["json_boxify","Object","Object.html#method-i-json_boxify","(h, page)",""],["jupyter_post_write","Object","Object.html#method-i-jupyter_post_write","(site)",""],["jupyter_pre_render","Object","Object.html#method-i-jupyter_pre_render","(site)",""],["last_modified_at","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-last_modified_at","(page)","<p>Returns the last modified date of a page Params:\n<p><code>page</code> &mdash; The page to get the last modified date of\n\n<p>Returns: …\n"],["layout_to_human","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-layout_to_human","(layout)",""],["lch_to_hpluv","Hsluv","Hsluv.html#method-i-lch_to_hpluv","(arr)",""],["lch_to_hsluv","Hsluv","Hsluv.html#method-i-lch_to_hsluv","(arr)",""],["lch_to_luv","Hsluv","Hsluv.html#method-i-lch_to_luv","(arr)",""],["lch_to_rgb","Hsluv","Hsluv.html#method-i-lch_to_rgb","(l, c, h)",""],["length_of_ray_until_intersect","Hsluv","Hsluv.html#method-i-length_of_ray_until_intersect","(theta, line)",""],["link_gtn_slides_external","GtnLinter","GtnLinter.html#method-c-link_gtn_slides_external","(contents)",""],["link_gtn_tutorial_external","GtnLinter","GtnLinter.html#method-c-link_gtn_tutorial_external","(contents)",""],["linkify","Object","Object.html#method-i-linkify","(text, path)",""],["lint_faq_file","SchemaValidator","SchemaValidator.html#method-c-lint_faq_file","(fn)",""],["lint_material","SchemaValidator","SchemaValidator.html#method-c-lint_material","(fn)",""],["lint_news_file","SchemaValidator","SchemaValidator.html#method-c-lint_news_file","(fn)",""],["lint_quiz_file","SchemaValidator","SchemaValidator.html#method-c-lint_quiz_file","(fn)",""],["lint_topic","SchemaValidator","SchemaValidator.html#method-c-lint_topic","(fn)",""],["lintable?","SchemaValidator","SchemaValidator.html#method-c-lintable-3F","(fn)",""],["list_all_materials","TopicFilter","TopicFilter.html#method-c-list_all_materials","(site)","<p>This is a helper function to get all the materials in a site.\n"],["list_all_tags","Jekyll::ImplTopicFilter","Jekyll/ImplTopicFilter.html#method-i-list_all_tags","(site)",""],["list_all_tags","TopicFilter","TopicFilter.html#method-c-list_all_tags","(site)","<p>List every tag used across all materials. This is used to generate the tag cloud.\n<p>Parameters:\n<p><code>site</code> &mdash; The …\n"],["list_materials_by_tool","Jekyll::ImplTopicFilter","Jekyll/ImplTopicFilter.html#method-i-list_materials_by_tool","(site)",""],["list_materials_by_tool","TopicFilter","TopicFilter.html#method-c-list_materials_by_tool","(site)","<p>List materials by tool Parameters:\n<p><code>site</code> &mdash; The <code>Jekyll::Site</code> object, used to get the list of pages.\n\n<p>Returns: …\n"],["list_materials_structured","Jekyll::ImplTopicFilter","Jekyll/ImplTopicFilter.html#method-i-list_materials_structured","(site, topic_name)",""],["list_materials_structured","TopicFilter","TopicFilter.html#method-c-list_materials_structured","(site, topic_name)","<p>This function returns a list of all the materials that are available for a specific topic, but this time …\n"],["list_topics","TopicFilter","TopicFilter.html#method-c-list_topics","(site)","<p>This function returns a list of all the topics that are available. Params:\n<p><code>site</code> &mdash; The <code>Jekyll::Site</code> object …\n\n"],["list_topics_by_category","Jekyll::ImplTopicFilter","Jekyll/ImplTopicFilter.html#method-i-list_topics_by_category","(site, category)",""],["list_videos","TopicFilter","TopicFilter.html#method-c-list_videos","(site)","<p>This is a helper function to get all the materials in a site.\n"],["load_bib","Gtn::Scholar","Gtn/Scholar.html#method-c-load_bib","(site)",""],["load_bundle","Jekyll::JsBundle","Jekyll/JsBundle.html#method-i-load_bundle","(name)","<p>Load a specific bundle, in liquid\n<p><code>name</code> &mdash; the name of the bundle to load\n\n<p>Returns the HTML to load the bundle …\n"],["load_bundle_dev","Jekyll::JsBundle","Jekyll/JsBundle.html#method-i-load_bundle_dev","(name)",""],["load_bundle_production","Jekyll::JsBundle","Jekyll/JsBundle.html#method-i-load_bundle_production","(name)",""],["load_svg","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-load_svg","(path)","<p>Load an SVG file directly into the page Params:\n<p><code>path</code> &mdash; The path of the SVG file (relative to GTN workspace …\n\n"],["lookup_name","Object","Object.html#method-i-lookup_name","(user, site)","<p>This function returns the name of a user, if it is known. Otherwise, it returns the user name. Params: …\n"],["luv_to_lch","Hsluv","Hsluv.html#method-i-luv_to_lch","(arr)",""],["luv_to_xyz","Hsluv","Hsluv.html#method-i-luv_to_xyz","(arr)",""],["mapContributor","Jekyll::APIGenerator","Jekyll/APIGenerator.html#method-i-mapContributor","(site, c)","<p>Map a contributor ID to a JSON object which includes links to their profile page and API endpoint Params: …\n"],["mapped?","Gtn::Shortlinks","Gtn/Shortlinks.html#method-c-mapped-3F","(tutorial, current_mapping)",""],["markdownify","GTNNotebooks","GTNNotebooks.html#method-c-markdownify","(site, text)",""],["markdownify","Jekyll::APIGenerator","Jekyll/APIGenerator.html#method-i-markdownify","(site, text)","<p>Use Jekyll&#39;s Markdown converter to convert text to HTML Params:\n<p><code>site</code> &mdash; <code>Jekyll::Site</code> object\n<p><code>text</code> &mdash; <code>String</code> …\n"],["markdownify","Jekyll::Tags::SnippetIncludeTag","Jekyll/Tags/SnippetIncludeTag.html#method-i-markdownify","(text)",""],["max_chroma_for","Hsluv","Hsluv.html#method-i-max_chroma_for","(l, h)",""],["max_safe_chroma_for","Hsluv","Hsluv.html#method-i-max_safe_chroma_for","(l)",""],["message","ReviewDogEmitter","ReviewDogEmitter.html#method-c-message","(path: '', idx: 0, match_start: 0, match_end: 1, replacement: nil, message: 'No message', level: 'WARNING', code: 'GTN000', full_line: '')",""],["most_recent_contributors","Jekyll::ImplTopicFilter","Jekyll/ImplTopicFilter.html#method-i-most_recent_contributors","(contributors, count)","<p>List the most recent contributors to the GTN. Parameters:\n<p><code>contributors</code> &mdash; A hash of contributors\n<p><code>count</code> &mdash; The …\n"],["new","Jekyll::BibTag","Jekyll/BibTag.html#method-c-new","(tag_name, text, tokens)",""],["new","Jekyll::CiteTag","Jekyll/CiteTag.html#method-c-new","(tag_name, text, tokens)",""],["new","Jekyll::CustomLinkTag","Jekyll/CustomLinkTag.html#method-c-new","(tag_name, text, tokens)",""],["new","Jekyll::DumpSearchDataTag","Jekyll/DumpSearchDataTag.html#method-c-new","(tag_name, text, tokens)",""],["new","Jekyll::Figurify","Jekyll/Figurify.html#method-c-new","(config)",""],["new","Jekyll::IconTag","Jekyll/IconTag.html#method-c-new","(tag_name, text, tokens)",""],["new","Jekyll::IconTagVar","Jekyll/IconTagVar.html#method-c-new","(tag_name, text, tokens)",""],["new","Jekyll::ToolTag","Jekyll/ToolTag.html#method-c-new","(tag_name, text, tokens)",""],["new","Jekyll::WorkflowTag","Jekyll/WorkflowTag.html#method-c-new","(tag_name, text, tokens)",""],["new_more_accessible_boxes","GtnLinter","GtnLinter.html#method-c-new_more_accessible_boxes","(contents)",""],["new_more_accessible_boxes_agenda","GtnLinter","GtnLinter.html#method-c-new_more_accessible_boxes_agenda","(contents)",""],["no_target_blank","GtnLinter","GtnLinter.html#method-c-no_target_blank","(contents)",""],["non_existent_snippet","GtnLinter","GtnLinter.html#method-c-non_existent_snippet","(contents)",""],["notebook_filter","GTNNotebooks","GTNNotebooks.html#method-c-notebook_filter","(data, language = nil)",""],["obtain_time","Gtn::ModificationTimes","Gtn/ModificationTimes.html#method-c-obtain_time","(f)",""],["onlyEnabled","Object","Object.html#method-i-onlyEnabled","(x)",""],["parseOptions","Object","Object.html#method-i-parseOptions","()",""],["parse_metadata","Object","Object.html#method-i-parse_metadata","(path)",""],["parse_tutorial_for_zenodo_link","Object","Object.html#method-i-parse_tutorial_for_zenodo_link","(path)",""],["parse_zenodo_id_formats","Object","Object.html#method-i-parse_zenodo_id_formats","(link)",""],["populate_cache","Gtn::Scholar","Gtn/Scholar.html#method-c-populate_cache","()",""],["printableMaterial","Object","Object.html#method-i-printableMaterial","(path)",""],["process_pages","TopicFilter","TopicFilter.html#method-c-process_pages","(site, pages)",""],["pusher","Jekyll::AuthorPageGenerator","Jekyll/AuthorPageGenerator.html#method-i-pusher","(t, datastructure, flat)","<p>This extracts the contributions and pushes them on to an existing datastructure, modifying it in the …\n"],["radians_to_degrees","Hsluv","Hsluv.html#method-i-radians_to_degrees","(rad)",""],["recently_modified_tutorials","Jekyll::ImplTopicFilter","Jekyll/ImplTopicFilter.html#method-i-recently_modified_tutorials","(site)","<p>Find the most recently modified tutorials Parameters:\n<p><code>site</code> &mdash; The <code>Jekyll::Site</code> object, used to get the list …\n\n"],["regex_replace","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-regex_replace","(str, regex_search, value_replace)",""],["regex_replace_once","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-regex_replace_once","(str, regex_search, value_replace)","<p>This method does a single regex replacement\n<p>Example\n\n<pre>{{ content | regex_replace: &#39;&lt;hr&gt;&#39;, &#39;&#39; }}</pre>\n"],["render","Jekyll::BibTag","Jekyll/BibTag.html#method-i-render","(context)",""],["render","Jekyll::CiteTag","Jekyll/CiteTag.html#method-i-render","(context)",""],["render","Jekyll::ColorPickerTag","Jekyll/ColorPickerTag.html#method-i-render","(_context)","<p>This function renders the color box Params:\n<p><code>context</code> &mdash; The context of the page\n\n<p>Example:\n"],["render","Jekyll::CustomLinkTag","Jekyll/CustomLinkTag.html#method-i-render","(_context)",""],["render","Jekyll::DumpSearchDataTag","Jekyll/DumpSearchDataTag.html#method-i-render","(context)",""],["render","Jekyll::FileExistsTag","Jekyll/FileExistsTag.html#method-i-render","(context)","<p>Render the tag Params:\n<p><code>context</code> &mdash; The context of the page\n\n"],["render","Jekyll::IconTag","Jekyll/IconTag.html#method-i-render","(context)",""],["render","Jekyll::IconTagVar","Jekyll/IconTagVar.html#method-i-render","(context)",""],["render","Jekyll::Tags::SnippetIncludeTag","Jekyll/Tags/SnippetIncludeTag.html#method-i-render","(context)",""],["render","Jekyll::ToolTag","Jekyll/ToolTag.html#method-i-render","(context)",""],["render","Jekyll::WorkflowTag","Jekyll/WorkflowTag.html#method-i-render","(_context)",""],["renderMarkdownCells","GTNNotebooks","GTNNotebooks.html#method-c-renderMarkdownCells","(site, notebook, metadata, _page_url, dir)",""],["render_citation","Gtn::Scholar","Gtn/Scholar.html#method-c-render_citation","(key)",""],["render_for_text","Jekyll::IconTag","Jekyll/IconTag.html#method-i-render_for_text","(icon)","<p>This function renders the icon tag Params:\n<p><code>icon</code> &mdash; The icon to render\n<p>+@area+ &mdash; Whether to add aria-hidden\n"],["render_jupyter_notebook","GTNNotebooks","GTNNotebooks.html#method-c-render_jupyter_notebook","(data, content, url, _last_modified, notebook_language, site, dir)",""],["render_rmarkdown","GTNNotebooks","GTNNotebooks.html#method-c-render_rmarkdown","(page_data, page_content, page_url, page_last_modified, fn)",""],["replace_elements","Gtn::Boxify","Gtn/Boxify.html#method-c-replace_elements","(text, lang = 'en', key)",""],["replace_newline_doublespace","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-replace_newline_doublespace","(text)","<p>Replaces newlines with newline + two spaces\n"],["resolve_material","TopicFilter","TopicFilter.html#method-c-resolve_material","(site, material)",""],["rgb_prepare","Hsluv","Hsluv.html#method-i-rgb_prepare","(arr)",""],["rgb_to_hex","Hsluv","Hsluv.html#method-i-rgb_to_hex","(r, g, b)",""],["rgb_to_hpluv","Hsluv","Hsluv.html#method-i-rgb_to_hpluv","(r, g, b)",""],["rgb_to_hsluv","Hsluv","Hsluv.html#method-i-rgb_to_hsluv","(r, g, b)",""],["rgb_to_lch","Hsluv","Hsluv.html#method-i-rgb_to_lch","(r, g, b)",""],["rgb_to_xyz","Hsluv","Hsluv.html#method-i-rgb_to_xyz","(arr)",""],["run","SchemaValidator","SchemaValidator.html#method-c-run","()",""],["run_linter_global","GtnLinter","GtnLinter.html#method-c-run_linter_global","()",""],["safe_title","Gtn::Boxify","Gtn/Boxify.html#method-c-safe_title","(title)",""],["segment","Gtn::Metrics","Gtn/Metrics.html#method-c-segment","(values, attr)",""],["segment_page_by_key","Gtn::Metrics","Gtn/Metrics.html#method-c-segment_page_by_key","(values, key)",""],["set_plain_output","GtnLinter","GtnLinter.html#method-c-set_plain_output","()",""],["set_rdjson_output","GtnLinter","GtnLinter.html#method-c-set_rdjson_output","()",""],["short_tool","TopicFilter","TopicFilter.html#method-c-short_tool","(tool)","<p>Get a short version of a tool. Parameters:\n<p><code>tool</code> &mdash; A tool string\n\n<p>Returns:\n"],["should_ignore","GtnLinter","GtnLinter.html#method-c-should_ignore","(contents)",""],["slide?","SchemaValidator","SchemaValidator.html#method-c-slide-3F","(fn)",""],["slugify_unsafe","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-slugify_unsafe","(text)","<p>A slightly more unsafe slugify function Params:\n<p><code>text</code> &mdash; The text to slugify\n\n<p>Returns:\n"],["snippets_too_close_together","GtnLinter","GtnLinter.html#method-c-snippets_too_close_together","(contents)",""],["split_sentence","Object","Object.html#method-i-split_sentence","(sentence, timing)",""],["synthesize","Object","Object.html#method-i-synthesize","(uncorrected_line, engine, voice: 'Amy', lang: 'en-GB', neural: true, output: nil)",""],["test_doi","GtnLinterTest","GtnLinterTest.html#method-i-test_doi","()",""],["test_exact","IntersectionTest","IntersectionTest.html#method-i-test_exact","()",""],["test_external_gtn_link","GtnLinterTest","GtnLinterTest.html#method-i-test_external_gtn_link","()",""],["test_external_gtn_link_slides","GtnLinterTest","GtnLinterTest.html#method-i-test_external_gtn_link_slides","()",""],["test_fix_broken_link","GtnLinterTest","GtnLinterTest.html#method-i-test_fix_broken_link","()",""],["test_fix_notoc","GtnLinterTest","GtnLinterTest.html#method-i-test_fix_notoc","()",""],["test_single_page","BoxIdTest","BoxIdTest.html#method-i-test_single_page","()",""],["test_workflow","Object","Object.html#method-i-test_workflow","(workflow_file, galaxy_id)",""],["test_youtube","GtnLinterTest","GtnLinterTest.html#method-i-test_youtube","()",""],["testnew_title_","GtnLinterTest","GtnLinterTest.html#method-i-testnew_title_","()",""],["time_cache","Gtn::ModificationTimes","Gtn/ModificationTimes.html#method-c-time_cache","()",""],["timefmt","Object","Object.html#method-i-timefmt","(t, fmt)","<p>Intro slides. Fast: editly –json editly.json5  126,23s user 5,62s system 126% cpu 1:44,08 total Slow: …\n"],["title_classes","Gtn::Boxify","Gtn/Boxify.html#method-c-title_classes","()",""],["to_jsonld","Jekyll::JsonldFilter","Jekyll/JsonldFilter.html#method-i-to_jsonld","(material, topic, site)","<p>Convert a material to JSON-LD. Parameters:\n<p><code>material</code> &mdash; The material object.\n<p><code>topic</code> &mdash; The topic object.\n"],["to_linear","Hsluv","Hsluv.html#method-i-to_linear","(c)",""],["to_person_jsonld","Jekyll::JsonldFilter","Jekyll/JsonldFilter.html#method-i-to_person_jsonld","(id, contributor, site)","<p>Generate the JSON-LD metadata for a person as JSON. Parameters:\n<p><code>id</code> &mdash; The id of the person.\n<p><code>contributor</code> &mdash; The …\n"],["to_prometheus","Hash","Hash.html#method-i-to_prometheus","()",""],["top_citations","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-top_citations","(citations)","<p>Obtain the most cited paper in the GTN Params:\n<p><code>citations</code> &mdash; The citations to search through\n\n<p>Returns:\n"],["topic_count","Jekyll::ImplTopicFilter","Jekyll/ImplTopicFilter.html#method-i-topic_count","(resources)",""],["topic_filter","Jekyll::ImplTopicFilter","Jekyll/ImplTopicFilter.html#method-i-topic_filter","(site, topic_name)",""],["topic_filter","TopicFilter","TopicFilter.html#method-c-topic_filter","(site, topic_name)","<p>This function returns a list of all the materials that are available for a specific topic. Params:\n<p><code>site</code> … &mdash; "],["topic_name_from_page","Jekyll::GtnFunctions","Jekyll/GtnFunctions.html#method-i-topic_name_from_page","(page, site)",""],["translate","Object","Object.html#method-i-translate","(word)",""],["tutorial?","SchemaValidator","SchemaValidator.html#method-c-tutorial-3F","(fn)",""],["update","Gtn::Shortlinks","Gtn/Shortlinks.html#method-c-update","(current_mapping)",""],["update_data_library","Object","Object.html#method-i-update_data_library","(path, topic, tutorial, zenodo_record)",""],["update_tutorial","Object","Object.html#method-i-update_tutorial","(path, zenodo_id)",""],["validate_document","Object","Object.html#method-i-validate_document","(document, validator)",""],["validate_document","SchemaValidator","SchemaValidator.html#method-c-validate_document","(document, validator)",""],["validate_non_empty_key_value","SchemaValidator","SchemaValidator.html#method-c-validate_non_empty_key_value","(map, key)",""],["validate_requirements","SchemaValidator","SchemaValidator.html#method-c-validate_requirements","(requirements)",""],["visitAndMarkdownify","Jekyll::APIGenerator","Jekyll/APIGenerator.html#method-i-visitAndMarkdownify","(site, f)","<p>Recursively visit a hash and markdownify all strings inside Params:\n<p><code>site</code> &mdash; <code>Jekyll::Site</code> object\n<p><code>f</code> &mdash; <code>Hash</code> to …\n"],["warning","ReviewDogEmitter","ReviewDogEmitter.html#method-c-warning","(path: '', idx: 0, match_start: 0, match_end: 1, replacement: nil, message: 'No message', code: 'GTN000', full_line: '')",""],["write_data_library","Object","Object.html#method-i-write_data_library","(path, topic, tutorial, tutorial_zenodo_id, force)",""],["xyz_to_luv","Hsluv","Hsluv.html#method-i-xyz_to_luv","(arr)",""],["xyz_to_rgb","Hsluv","Hsluv.html#method-i-xyz_to_rgb","(arr)",""],["youtube_bad","GtnLinter","GtnLinter.html#method-c-youtube_bad","(contents)","<p>GTN:002 youtube discouraged\n"],["add_galaxy_instance_badges.py","","bin/add_galaxy_instance_badges_py.html","","<p>#!/usr/bin/env python import argparse import glob from collections import defaultdict import os import …\n"],["ari-gen-sample-audio.sh","","bin/ari-gen-sample-audio_sh.html","","<p>sample_sentence=&#39;Welcome to the Galaxy Training Network! We are a platform for FAIR and Accessible …\n"],["ari-make.sh","","bin/ari-make_sh.html","","<p>#!/bin/bash set -e\n<p>function cleanup(){\n\n<pre>kill $(pgrep -f $(npm bin)/http-server) || true</pre>\n"],["ari-quick.sh","","bin/ari-quick_sh.html","","<p>#!/bin/bash input=“$1”; topic=$(echo $input | cut -d/ -f 2) tutor=$(echo $input | cut -d/ -f …\n"],["ari.sh","","bin/ari_sh.html","","<p>#!/bin/bash set -eo pipefail\n<p>GTN_CACHE=“$(pwd)/.jekyll-cache/aws-polly/” mkdir -p “$GTN_CACHE” …\n"],["check-broken-boxes.py","","bin/check-broken-boxes_py.html","","<p>#!/usr/bin/env python import copy import re import sys import logging\n<p># read in a tutorial, and check …\n"],["data-library-update.sh","","bin/data-library-update_sh.html","","<p>#!/bin/bash\n<p>for group in $(find topics -name tutorial.md); do\n\n<pre>echo $group\ntopic=$(echo &quot;$group&quot; | cut -d/ ...</pre>\n"],["data_libarary_download.sh","","bin/data_libarary_download_sh.html","","<p>#!/bin/bash set -e\n<p># set API key and galaxy instance\n<p>API_KEY=${GALAXY_DEFAULT_ADMIN_KEY:-fakekey} galaxy_instance …\n"],["docker-install-tutorials.sh","","bin/docker-install-tutorials_sh.html","","<p>#!/bin/bash\n<p># set API key API_KEY=${GALAXY_DEFAULT_ADMIN_KEY:-fakekey}\n<p># Enable Test Tool Shed echo “.. …\n"],["gtn-fix.sh","","bin/gtn-fix_sh.html","","<p>#!/bin/bash\n<p># GTN AutoFixer script. This fixes any automatically correctable errors we can # detect.\n<p># …\n"],["install_topic_requirements.sh","","bin/install_topic_requirements_sh.html","","<p># Install an entire topic to a Galaxy instance # # usages: install_topic_requirements.sh &lt;path to …\n"],["install_tutorial_requirements.sh","","bin/install_tutorial_requirements_sh.html","","<p>#! /bin/bash\n<p># Script to install a tutorial to a running Galaxy instance # # usage: install_tutorial.sh …\n"],["knit-automated.sh","","bin/knit-automated_sh.html","","<p>#!/bin/bash DIR=/tmp/git-gat op=“$1”\n<p>declare -a tutorials tutorials=(admin/ansible-galaxy admin/backup-cleanup …\n"],["knit-frog.py","","bin/knit-frog_py.html","","<p>#!/usr/bin/env python import shutil import os import argparse import re import sys import knittingneedles …\n"],["knit.py","","bin/knit_py.html","","<p>#!/usr/bin/env python import argparse import re import sys import knittingneedles as knit\n<p>parser = argparse.ArgumentParser …\n"],["knittingneedles.py","","bin/knittingneedles_py.html","","<p>import copy import re\n<p>BOXES = r“^(*&gt;[s&gt;]*)” BOX_PREFIX = r“s*{% raw %}” BOX_OPEN …\n"],["lint-diffs.py","","bin/lint-diffs_py.html","","<p>#!/usr/bin/env python3 import sys import argparse parser = argparse.ArgumentParser(description=&#39;Check …\n"],["lunr-index.js","","bin/lunr-index_js.html","","<p>var lunr = require(“lunr”),\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">metadataParser</span> = <span class=\"ruby-identifier\">require</span>(<span class=\"ruby-string\">&quot;markdown-yaml-metadata-parser&quot;</span>),\n<span class=\"ruby-identifier\">path</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["lunr-search.js","","bin/lunr-search_js.html","","<p>var lunr = require(“lunr”),\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">fs</span> = <span class=\"ruby-identifier\">require</span>(<span class=\"ruby-string\">&quot;fs&quot;</span>);\n</pre>\n<p>const data = fs.readFileSync(&#39;search.json&#39;, …\n"],["mergeyaml.py","","bin/mergeyaml_py.html","","<p>#!/usr/bin/env python import glob import argparse import yaml\n<p>def extend_dict(merged, a):\n\n<pre>if isinstance(merged, ...</pre>\n"],["prepare_docker_checks.py","","bin/prepare_docker_checks_py.html","","<p>#!/usr/bin/env python\n<p>import os import glob\n<p># get all Dockerfiles and compare the first part of the file …\n"],["publish-archive","","bin/publish-archive.html","","<p>#!/usr/bin/env bash\n<p># Deploy aws s3 sync _site/training-material/ s3://galaxy-training/archive/${SOURCE_TAG}/ …\n"],["schema-contributors.yaml","","bin/schema-contributors_yaml.html","","<p>type: map examples: |\n\n<pre>hexylena:\n    name: Helena\n    twitter: hexylena\n    bio: I wrote this documentation! ...</pre>\n"],["schema-faq.yaml","","bin/schema-faq_yaml.html","","<p>type: map mapping:\n\n<pre>layout:\n    type: str\n    required: true\n    enum:\n        - faq\n    description: | ...</pre>\n"],["schema-learning-pathway.yaml","","bin/schema-learning-pathway_yaml.html","","<p>type: map mapping:\n\n<pre>layout:\n    type: str\n    enum:\n      - learning-pathway\ntitle:\n    type: str\n    required: ...</pre>\n"],["schema-news.yaml","","bin/schema-news_yaml.html","","<p>type: map mapping:\n\n<pre>layout:\n    type: str\n    required: true\n    enum:\n        - news\ntitle:\n    type: ...</pre>\n"],["schema-quiz.yaml","","bin/schema-quiz_yaml.html","","<p>type: map mapping:\n\n<pre>title:\n    type: str\n    required: true\n    description: |\n        Title of the Quiz ...</pre>\n"],["schema-requirement-external.yaml","","bin/schema-requirement-external_yaml.html","","<p>type: map mapping:\n\n<pre>type:\n    type: str\n    required: true\n    enum:\n        - external\ntitle:\n    type: ...</pre>\n"],["schema-requirement-internal.yaml","","bin/schema-requirement-internal_yaml.html","","<p>type: map mapping:\n\n<pre>type:\n    type: str\n    required: true\n    enum:\n        - internal\ntopic_name:\n   ...</pre>\n"],["schema-slides.yaml","","bin/schema-slides_yaml.html","","<p>type: map mapping:\n\n<pre>layout:\n    type: str\n    required: true\n    enum:\n        #- base_slides\n        - ...</pre>\n"],["schema-topic.yaml","","bin/schema-topic_yaml.html","","<p>type: map mapping:\n\n<pre>name:\n    type: str\n    required: true\n    pattern: /^[a-z0-9_-]+$/\n    description: ...</pre>\n"],["schema-tutorial.yaml","","bin/schema-tutorial_yaml.html","","<p>type: map mapping:\n\n<pre>layout:\n    type: str\n    required: true\n    enum:\n        - tutorial_hands_on\n    ...</pre>\n"],["setup_training_content.py","","bin/setup_training_content_py.html","","<p>#!/usr/bin/env python import argparse import collections import os import shutil from pathlib import …\n"],["slides-fix.css","","bin/slides-fix_css.html","","<p>em {\n\n<pre>font-family: &#39;Droid Sans&#39;, serif;</pre>\n<p>}\n"],["supported-fetch.py","","bin/supported-fetch_py.html","","<p>#!/usr/bin/env python import argparse import csv import io import json import logging import multiprocessing.pool …\n"],["validate-has-workflow.sh","","bin/validate-has-workflow_sh.html","","<p>#!/bin/bash # First find the disabled tutorials, we don&#39;t care if boxes are broken there # Then find …\n"],["video-browser-recorder.js","","bin/video-browser-recorder_js.html","","<p>const { chromium } = require(&#39;playwright&#39;); const { saveVideo } = require(&#39;playwright-video&#39;); …\n"],["video-builder.py","","bin/video-builder_py.html","","<p>#!/usr/bin/env python import os import re import subprocess import tempfile import json import yaml import …\n"],["video-diffplayer.py","","bin/video-diffplayer_py.html","","<p>#!/usr/bin/env python3 “”“Simple curses-based text editor.\n<p>This code is based on github.com/tdryer/editor …\n"],["video-extract-script.py","","bin/video-extract-script_py.html","","<p>#!/usr/bin/env python import os import argparse import yaml import re import json import marko import …\n"],["video-term-demo-magic.sh","","bin/video-term-demo-magic_sh.html","","<p>#!/usr/bin/env bash\n<p>############################################################################### # …\n"],["video-term-recorder.sh","","bin/video-term-recorder_sh.html","","<p>#!/bin/bash OUR_DIR=$(dirname “$0”) SCRIPT=“$1”; SCRIPT_LOG=“$2”; ANSIBLE_HOST_OVERRIDE …\n"],["yaml2json.py","","bin/yaml2json_py.html","","<p>#!/usr/bin/env python import sys import yaml import json\n<p>sys.stdout.write(json.dumps(doc, indent=2)) for … &mdash; \n"]]}}